# Modify libc++.a build script to work with Xcode's clang++

--- a/third_party/libc++-static/build.sh
+++ b/third_party/libc++-static/build.sh
@@ -28,14 +28,14 @@ cd libcxxbuild
 
 mkdir libcxx
 pushd libcxx
-sed -i '' 's/"default"/"hidden"/g' ../../libcxx/include/__config
+#sed -i '' 's/"default"/"hidden"/g' ../../libcxx/include/__config
 "$CXX" -c -I../../libcxx/include/ ../../libcxx/src/*.cpp $FLAGS
 popd
 
 mkdir libcxxabi
 pushd libcxxabi
-sed -i '' 's/"default"/"hidden"/g' ../../libcxxabi/src/*
-sed -i '' 's/push(default)/push(hidden)/g' ../../libcxxabi/src/*
+#sed -i '' 's/"default"/"hidden"/g' ../../libcxxabi/src/*
+#sed -i '' 's/push(default)/push(hidden)/g' ../../libcxxabi/src/*
 
 # Let the default handler not depend on __cxa_demangle, this saves 0.5MB binary
 # size in each binary linking against libc++.a
@@ -47,7 +47,7 @@ popd
 libtool -static -o libc++.a libcxx*/*.o
 
 cp libc++.a "${THIS_DIR}/libc++.a"
-upload_to_google_storage.py -b chromium-libcpp "${THIS_DIR}/libc++.a"
+#upload_to_google_storage.py -b chromium-libcpp "${THIS_DIR}/libc++.a"
 
 popd
 rm -rf "${DIR}"
