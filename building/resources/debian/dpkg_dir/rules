#!/usr/bin/make -f

# enable verbose build messages
export DH_VERBOSE=1

# enable all build hardening flags
export DEB_BUILD_MAINT_OPTIONS=hardening=+all

%:
	dh $@ --parallel

override_dh_auto_build-arch:
	mv out/Release/chrome out/Release/chromium || true
	mv out/Release/chrome.1 out/Release/chromium.1 || true
	mv out/Release/chrome_sandbox out/Release/chrome-sandbox || true
	mv out/Release/locales/en-US.pak out/Release/resources || true
	chmod 4755 out/Release/chrome-sandbox # suid sandbox

override_dh_auto_build-indep:
	mv out/Release/locales/en-US.pak out/Release/resources || true

override_dh_auto_install-arch:
	dh_auto_install
	# create /etc/chromium.d README file
	echo "Any files placed in this directory will be sourced prior to executing chromium." \
		> debian/chromium/etc/chromium.d/README
	# update launcher script with build information
	sed 's|@BUILD_DIST@|$(shell printf "%s %s/%s" $(shell lsb_release -si) $(shell lsb_release -sc) $(shell lsb_release -sr))|' \
		< debian/scripts/chromium > debian/chromium/usr/bin/chromium
	# move icons into /usr/share
	for file in $(shell find chrome/app/theme/chromium -name product_logo_[0-9]* -a ! -name *mono*); do \
		ext=$$(echo $$file | cut -d\. -f2); \
		siz=$$(echo $$file | cut -d_ -f3 | sed s/\.$$ext//); \
		dst=debian/chromium/usr/share/icons/hicolor/$$siz\x$$siz/apps; \
		mkdir -p $$dst; \
		cp $$file $$dst/chromium.$$ext; \
		done

override_dh_fixperms:
	dh_fixperms --exclude chrome-sandbox

override_dh_gencontrol:
	dh_gencontrol -- -VBuilt-Using="$(shell dpkg-query -f '$${source:Package} (= $${source:Version}), ' -W libjs-jquery libjs-jquery-flot)"
